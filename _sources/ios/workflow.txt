
:mod:`workflow` --- Python Integration for Editorial Workflows
==============================================================

.. module:: workflow
   :synopsis: Python Integration for Editorial Workflows
.. sectionauthor:: Ole Zorn


The :mod:`workflow` module defines functions that can be used in :ref:`workflow-action-run-script` and :ref:`workflow-action-custom` workflow actions.

.. function:: get_input()

   Returns the input that was passed to this action as output from the previous action.

.. function:: get_parameters()

   Returns the parameter values of the currently running *custom* action as a dictionary. In regular script actions, it simply returns an empty dictionary.
   
   The type of each value depends on the parameter type: *Text* parameters are represented as unicode strings (with all variables already resolved), *switch* parameter values are ``True`` or ``False``, and *single choice* parameter values are the (zero-based) index of the selected option.

.. function:: set_output(string)

   Sets the text that is passed to the next workflow action.

.. function:: get_variable(name)

   Gets the value of a variable that was set with a :ref:`workflow-action-set-variable` action elsewhere in the workflow.
   
.. function:: get_view()

    If a "Custom UI" action is currently running, return its root view (otherwise `None`).
   
.. function:: set_variable(name, value)

   Sets the value of a workflow variable.
   
   .. note::
        In order to be able to use this variable in other actions, it has
        to be defined in a regular :ref:`workflow-action-set-variable`
        action as well.

.. function:: stop()

   Stops the workflow after the script has finished running. To stop the
   workflow immediately, you can raise a `KeyboardInterrupt`.
   